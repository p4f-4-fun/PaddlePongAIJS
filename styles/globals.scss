/* global-variables-and-mixins */
$backgroundColorFromColorMain: #FFFFFF;
$borderRadius: 4px;
$colorMain: #FFFFFF;
$transitionDuration: 150ms;
$transitionLongDuration: 1500ms;
$transitionTimingFunction: linear;

@mixin fontBase($fontFamily: "Barlow Semi Condensed", $fontSize: 1.6rem, $fontWeight: 400, $fontColor: $colorMain) {
    color: $fontColor;
    font-family: $fontFamily, sans-serif;
    font-size: $fontSize;
    font-weight: $fontWeight;
}
@mixin borderType1($borderColor: $backgroundColorFromColorMain) {
    border: none;
    border: calc($borderRadius/2) solid $borderColor;
    border-radius: $borderRadius;
}
@mixin borderType2($borderColor: $backgroundColorFromColorMain) {
    border: none;
    border-bottom: calc($borderRadius/2) solid $borderColor;
}
@mixin boxShadow($boxShadowSize: 10px) {
    box-shadow: inset 0px 0px $boxShadowSize 0px rgba(0, 0, 0, 1);
    -moz-box-shadow: inset 0px 0px $boxShadowSize 0px rgba(0, 0, 0, 1);
    -webkit-box-shadow: inset 0px 0px $boxShadowSize 0px rgba(0, 0, 0, 1);
}
@mixin backgroundColorFromGradientConst($opacity) {
    background-color: rgba(10,10,40,$opacity);
}
@mixin d-flex-row {
    align-items: center;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}
@mixin d-flex-column($justifyContent: center) {
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: $justifyContent;
}
@mixin widthHeight100prcnt {
    height: 100%;
    min-height: 100%;
    width: 100%;
    min-width: 100%;
}
/* /global-variables-and-mixins */

/* simple-css-reset */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    outline: none; // normaly we don't want to outline none, because of accessibility, but this ain't that case
    overflow: hidden;
    user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    -webkit-user-select: none !important;
}
/* /simple-css-reset */

/* single classes */
.hidden {
    display: none !important;
}
.hiddenByTransformXLeft {
    opacity: 0 !important;
    transform: translateX(-9999px) !important;
    transform: translateX(-100vw) !important;
    transition: all $transitionDuration ease-in-out !important;
    visibility: hidden !important;
}
.hiddenByTransformXRight {
    @extend .hiddenByTransformXLeft;
    transform: translateX(9999px) !important;
    transform: translateX(100vw) !important;
}
.cursorMove {
/* 
    Cursor move icon by icons8
    <a target="_blank" href="https://icons8.com/icon/ropwEia5dT03/move">Move</a> icon by <a target="_blank" href="https://icons8.com">Icons8</a>     
*/
cursor: url("../assets/icons8-cursormove.png"), move !important;    
}
/* /single classes */


